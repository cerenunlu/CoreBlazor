// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FM.Web.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using FM.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using FM.Web.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\MSI PC\source\repos\FM\FM.Web\_Imports.razor"
using Blazored.SessionStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\MSI PC\source\repos\FM\FM.Web\Pages\Dashboard.razor"
using FM.DTOs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\MSI PC\source\repos\FM\FM.Web\Pages\Dashboard.razor"
using FM.Web.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/dashboard")]
    public partial class Dashboard : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 135 "C:\Users\MSI PC\source\repos\FM\FM.Web\Pages\Dashboard.razor"
       
    List<HouseDto> houseList = new List<HouseDto>();
    List<CityDto> cityList = new List<CityDto>();
    CityDto selectedCity = new CityDto();
    DistrictDto selectedDistrict = new DistrictDto();
    List<DistrictDto> districts = new List<DistrictDto>();
    List<HouseDto> houseListByCity = new List<HouseDto>();
    List<HouseDto> houseListByDistrict = new List<HouseDto>();
    List<HouseDto> houseListByAge = new List<HouseDto>();
    List<RentDto> rentList = new List<RentDto>();
    List<UserDto> users = new List<UserDto>();
    DistrictSelectDto selectDistrict = new DistrictSelectDto();
    List<DistrictSelectDto> listOfDistrict = new List<DistrictSelectDto>();
    private bool ByAge { get; set; }
    private bool AlertResultCity { get; set; }
    private bool AlertResultDistrict { get; set; }
    private bool AlertResultAge { get; set; }
    private bool AlertPost { get; set; }
    int temp = 0;
    string selectedGender = "";
    List<UserDto> userAgeList = new List<UserDto>();
    List<UserDto> userGenderList = new List<UserDto>();
    public string Name;
    public string RoleID;
    public int SelectedHouseID;
    protected async override Task OnInitializedAsync()
    {
        Name = "Welcome " + await sessionStorage.GetItemAsync<string>("Name") + " " + await sessionStorage.GetItemAsync<string>("Surname");
        RoleID = await sessionStorage.GetItemAsync<string>("RoleID");
        AlertPost = true;
        houseList = await Http.GetFromJsonAsync<List<HouseDto>>("HousePost/GetAll");
        cityList = await Http.GetFromJsonAsync<List<CityDto>>("City/GetAll");
        rentList = await Http.GetFromJsonAsync<List<RentDto>>("Rent/GetAll");
        ByAge = false;

    }
    async void GetDistrictList(ChangeEventArgs e = null)
    {
        houseList = await Http.GetFromJsonAsync<List<HouseDto>>("HousePost/GetAll");
        selectedDistrict = null;
        listOfDistrict.Clear();

        if (e != null)
        {
            if (selectedGender == "")
            {
                AlertResultCity = false;
                AlertPost = true;
                selectedCity = cityList.Where(c => c.ID.ToString() == e.Value.ToString()).FirstOrDefault();
                districts = await Http.GetFromJsonAsync<List<DistrictDto>>("District/GetAll/" + selectedCity.ID);
                foreach (var item in districts)
                {
                    DistrictSelectDto selectD = new DistrictSelectDto()
                    {

                        ID = item.ID,
                        Name = item.Name,
                        CityID = item.CityID,
                        isSelected = false,
                    };
                    listOfDistrict.Add(selectD);
                }
                GetHousePostByCity(selectedCity.ID);
                this.StateHasChanged();
            }
            else
            {
                foreach (var item in houseList)
                {
                    var user = await Http.GetFromJsonAsync<UserDto>("User/GetById/" + item.UserID);
                    users.Add(user);
                }
                foreach (var item in users)
                {
                    if (e.Value.ToString() == item.Age.ToString())
                    {
                        userAgeList.Add(item);
                    }
                }
                if (userAgeList == null || !userAgeList.Any())
                {
                    AlertResultAge = true;
                    AlertPost = false;

                }
                else
                {
                    HouseDto dto = new HouseDto();
                    List<HouseDto> list = new List<HouseDto>();
                    foreach (var item in userAgeList)
                    {
                        dto = houseList.Where(c => c.UserID.ToString() == item.ID.ToString()).FirstOrDefault();
                        list.Add(dto);

                    }
                    houseList = list;
                    AlertPost = true;
                }
                this.StateHasChanged();
                //houseList.Clear();
                userAgeList.Clear();
                houseList = houseList = await Http.GetFromJsonAsync<List<HouseDto>>("HousePost/GetAll");
            }

        }

    }


    async void GetHousePostByCity(int cityID)
    {

        houseList = houseList.Where(c => c.CityID.ToString() == cityID.ToString()).ToList();
        if (houseList == null || !houseList.Any())
        {
            AlertResultCity = true;
            AlertPost = false;

        }
        else
        {
            AlertResultCity = false;


        }
        this.StateHasChanged();
    }

    async void SelectDistrict(ChangeEventArgs e = null)
    {

        houseList = await Http.GetFromJsonAsync<List<HouseDto>>("HousePost/GetAll");
        if (e != null)
        {
            AlertResultDistrict = false;
            AlertPost = true;
            selectDistrict = listOfDistrict.Where(c => c.ID.ToString() == e.Value.ToString()).FirstOrDefault();
            selectDistrict.isSelected = true;
            houseList = houseList.Where(c => c.DistrictID.ToString() == e.Value.ToString()).ToList();

            if (houseList == null || !houseList.Any())
            {
                AlertResultDistrict = true;
                AlertPost = false;
                houseList = await Http.GetFromJsonAsync<List<HouseDto>>("HousePost/GetAll");
            }
            else
            {
                AlertResultDistrict = false;
            }
            e = null;
            this.StateHasChanged();
        }

    }
    async void SelectAge(ChangeEventArgs e = null)
    {
        ByAge = false;
        AlertPost = true;
        List<HouseDto> listHouse = new List<HouseDto>();

        users.Clear();
        userAgeList.Clear();
        AlertResultAge = false;
        if (e != null)
        {

            foreach (var item in houseList)
            {
                var user = await Http.GetFromJsonAsync<UserDto>("User/GetById/" + item.UserID);
                users.Add(user);
            }
            foreach (var item in users)
            {
                if (e.Value.ToString() == item.Age.ToString())
                {
                    userAgeList.Add(item);
                }
            }
            if (userAgeList == null || !userAgeList.Any())
            {
                AlertResultAge = true;
                AlertPost = false;

            }
            else
            {
                HouseDto dto = new HouseDto();
                List<HouseDto> list = new List<HouseDto>();
                foreach (var item in userAgeList)
                {
                    dto = houseList.Where(c => c.UserID.ToString() == item.ID.ToString()).FirstOrDefault();
                    list.Add(dto);

                }
                houseList = list;
                AlertPost = true;
            }
            this.StateHasChanged();
            //houseList.Clear();
            userAgeList.Clear();
            houseList = houseList = await Http.GetFromJsonAsync<List<HouseDto>>("HousePost/GetAll");
        }
    }
    async void SelectGender(ChangeEventArgs e = null)
    {
        userGenderList.Clear();
        List<HouseDto> list = new List<HouseDto>();
        if (e != null)
        {
            selectedGender = e.Value.ToString();
            if (selectedCity.ID != null && selectedCity.Name != null)
            {
                GetHousePostByCity(selectedCity.ID);
            }
            foreach (var item in houseList)
            {
                var user = await Http.GetFromJsonAsync<UserDto>("User/GetById/" + item.UserID);
                users.Add(user);
            }
            foreach (var item in users)
            {
                if (e.Value.ToString() == item.Gender)
                {
                    userGenderList.Add(item);
                }
            }
            if (userGenderList == null || !userGenderList.Any())
            {
                AlertResultAge = true;
                AlertPost = false;

            }
            else
            {
                HouseDto dto = new HouseDto();

                foreach (var item in userGenderList)
                {
                    dto = houseList.Where(c => c.UserID.ToString() == item.ID.ToString()).FirstOrDefault();
                    list.Add(dto);

                }
                houseList = list;
                AlertResultAge = false;
                AlertPost = true;
            }
            this.StateHasChanged();
            list.Clear();
            AlertResultAge = false;
            houseList.Clear();
            userGenderList.Clear();
            users.Clear();
            houseList = houseList = await Http.GetFromJsonAsync<List<HouseDto>>("HousePost/GetAll");
        }
    }

    async void SeeHouseDetail(int houseID)
    {
        SelectedHouseID = houseID;
        await sessionStorage.SetItemAsync("SelectedHouseID", SelectedHouseID);
        navigationaManager.NavigateTo("/SeeHouseDetail");
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.SessionStorage.ISessionStorageService sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationaManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
